/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  GatekeeperTwoAttack,
  GatekeeperTwoAttackInterface,
} from "../GatekeeperTwoAttack";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516101b23803806101b28339818101604052602081101561003357600080fd5b5051600080546001600160a01b0319166001600160a01b038084169190911791829055604080513060601b6020808301919091528251601481840301815260348301845280519082012060001960c091821c18901b6001600160c01b03198116605880850191909152845180850390910181526078909301845290820180516319b8102760e11b6001600160e01b0390911617815292518251919590941693919282918083835b602083106100f95780518252601f1990920191602091820191016100da565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d806000811461015b576040519150601f19603f3d011682016040523d82523d6000602084013e610160565b606091505b5050505050603f806101736000396000f3fe6080604052600080fdfea2646970667358221220b1a171e5c80fff82984606665f996302f36506f1550275c6264c1e766be45d8b64736f6c634300060c0033";

type GatekeeperTwoAttackConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GatekeeperTwoAttackConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GatekeeperTwoAttack__factory extends ContractFactory {
  constructor(...args: GatekeeperTwoAttackConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _address: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<GatekeeperTwoAttack> {
    return super.deploy(
      _address,
      overrides || {}
    ) as Promise<GatekeeperTwoAttack>;
  }
  override getDeployTransaction(
    _address: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_address, overrides || {});
  }
  override attach(address: string): GatekeeperTwoAttack {
    return super.attach(address) as GatekeeperTwoAttack;
  }
  override connect(signer: Signer): GatekeeperTwoAttack__factory {
    return super.connect(signer) as GatekeeperTwoAttack__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GatekeeperTwoAttackInterface {
    return new utils.Interface(_abi) as GatekeeperTwoAttackInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GatekeeperTwoAttack {
    return new Contract(address, _abi, signerOrProvider) as GatekeeperTwoAttack;
  }
}
