/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  GatekeeperTwo,
  GatekeeperTwoInterface,
} from "../../contracts/GatekeeperTwo";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes8",
        name: "_gateKey",
        type: "bytes8",
      },
    ],
    name: "enter",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "entrant",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506101ce806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80633370204e1461003b5780639db31d771461008e575b600080fd5b61007a6004803603602081101561005157600080fd5b50357fffffffffffffffff000000000000000000000000000000000000000000000000166100bf565b604080519115158252519081900360200190f35b61009661017c565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b6000333214156100ce57600080fd5b333b80156100db57600080fd5b82600160000367ffffffffffffffff168160c01c33604051602001808273ffffffffffffffffffffffffffffffffffffffff1660601b81526014019150506040516020818303038152906040528051906020012060c01c1867ffffffffffffffff161461014757600080fd5b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001632179055600192505050919050565b60005473ffffffffffffffffffffffffffffffffffffffff168156fea26469706673582212209869680f0a1ccf7f3f00b74e6142d55e426b5ad9626d88d5be8111617a18c06864736f6c634300060c0033";

type GatekeeperTwoConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GatekeeperTwoConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GatekeeperTwo__factory extends ContractFactory {
  constructor(...args: GatekeeperTwoConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<GatekeeperTwo> {
    return super.deploy(overrides || {}) as Promise<GatekeeperTwo>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): GatekeeperTwo {
    return super.attach(address) as GatekeeperTwo;
  }
  override connect(signer: Signer): GatekeeperTwo__factory {
    return super.connect(signer) as GatekeeperTwo__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GatekeeperTwoInterface {
    return new utils.Interface(_abi) as GatekeeperTwoInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GatekeeperTwo {
    return new Contract(address, _abi, signerOrProvider) as GatekeeperTwo;
  }
}
