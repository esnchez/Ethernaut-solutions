/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Denial, DenialInterface } from "../../contracts/Denial";

const _abi = [
  {
    inputs: [],
    name: "contractBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "partner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_partner",
        type: "address",
      },
    ],
    name: "setWithdrawPartner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506103c4806100206000396000f3fe60806040526004361061005e5760003560e01c80638b7afe2e116100435780638b7afe2e146100b45780638da5cb5b146100db578063be10862b1461010c57610065565b80633ccfd60b1461006a5780634e1c59141461008157610065565b3661006557005b600080fd5b34801561007657600080fd5b5061007f610121565b005b34801561008d57600080fd5b5061007f600480360360208110156100a457600080fd5b50356001600160a01b03166101f6565b3480156100c057600080fd5b506100c9610230565b60408051918252519081900360200190f35b3480156100e757600080fd5b506100f0610234565b604080516001600160a01b039092168252519081900360200190f35b34801561011857600080fd5b506100f061023a565b600061012e476064610249565b600080546040519293506001600160a01b031691839181818185875af1925050503d806000811461017b576040519150601f19603f3d011682016040523d82523d6000602084013e610180565b606091505b5050604051610a9e915082156108fc029083906000818181858888f193505050501580156101b2573d6000803e3d6000fd5b5042600155600080546001600160a01b03168152600260205260409020546101da9082610292565b600080546001600160a01b031681526002602052604090205550565b600080547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055565b4790565b610a9e81565b6000546001600160a01b031681565b600061028b83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f0000000000008152506102ec565b9392505050565b60008282018381101561028b576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b600081836103785760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561033d578181015183820152602001610325565b50505050905090810190601f16801561036a5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50600083858161038457fe5b049594505050505056fea26469706673582212203711a72027f677b5bf9b484f0c412ecbfd52813940856584f43b3a520ae7216a64736f6c634300060c0033";

type DenialConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DenialConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Denial__factory extends ContractFactory {
  constructor(...args: DenialConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Denial> {
    return super.deploy(overrides || {}) as Promise<Denial>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Denial {
    return super.attach(address) as Denial;
  }
  override connect(signer: Signer): Denial__factory {
    return super.connect(signer) as Denial__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DenialInterface {
    return new utils.Interface(_abi) as DenialInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Denial {
    return new Contract(address, _abi, signerOrProvider) as Denial;
  }
}
