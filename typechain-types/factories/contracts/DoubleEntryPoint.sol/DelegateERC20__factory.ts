/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  DelegateERC20,
  DelegateERC20Interface,
} from "../../../contracts/DoubleEntryPoint.sol/DelegateERC20";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "origSender",
        type: "address",
      },
    ],
    name: "delegateTransfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class DelegateERC20__factory {
  static readonly abi = _abi;
  static createInterface(): DelegateERC20Interface {
    return new utils.Interface(_abi) as DelegateERC20Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DelegateERC20 {
    return new Contract(address, _abi, signerOrProvider) as DelegateERC20;
  }
}
