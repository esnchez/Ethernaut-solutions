/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type { Shop, ShopInterface } from "../../../contracts/Shop.sol/Shop";

const _abi = [
  {
    inputs: [],
    name: "buy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "isSold",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "price",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052606460005534801561001557600080fd5b50610200806100256000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063a035b1fe14610046578063a6f2ae3a14610060578063e852e7411461006a575b600080fd5b61004e610086565b60408051918252519081900360200190f35b61006861008c565b005b6100726101c1565b604080519115158252519081900360200190f35b60005481565b60003390506000548173ffffffffffffffffffffffffffffffffffffffff1663a035b1fe6040518163ffffffff1660e01b815260040160206040518083038186803b1580156100da57600080fd5b505afa1580156100ee573d6000803e3d6000fd5b505050506040513d602081101561010457600080fd5b505110801590610117575060015460ff16155b156101be576001805460ff191681179055604080517fa035b1fe000000000000000000000000000000000000000000000000000000008152905173ffffffffffffffffffffffffffffffffffffffff83169163a035b1fe916004808301926020929190829003018186803b15801561018e57600080fd5b505afa1580156101a2573d6000803e3d6000fd5b505050506040513d60208110156101b857600080fd5b50516000555b50565b60015460ff168156fea26469706673582212209378b214499cd83ce42a15a296524447b0509a1aafde5cc82f4e89b190455c3764736f6c634300060c0033";

type ShopConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ShopConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Shop__factory extends ContractFactory {
  constructor(...args: ShopConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Shop> {
    return super.deploy(overrides || {}) as Promise<Shop>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Shop {
    return super.attach(address) as Shop;
  }
  override connect(signer: Signer): Shop__factory {
    return super.connect(signer) as Shop__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ShopInterface {
    return new utils.Interface(_abi) as ShopInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Shop {
    return new Contract(address, _abi, signerOrProvider) as Shop;
  }
}
