/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  ShopAttack,
  ShopAttackInterface,
} from "../../contracts/ShopAttack";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "callBuy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "price",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526000805460ff1916905534801561001a57600080fd5b506040516102363803806102368339818101604052602081101561003d57600080fd5b5051600080546001600160a01b0390921661010002610100600160a81b03199092169190911790556101c2806100746000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80637388d0571461003b578063a035b1fe14610045575b600080fd5b61004361005f565b005b61004d6100e3565b60408051918252519081900360200190f35b600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a6f2ae3a6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156100c957600080fd5b505af11580156100dd573d6000803e3d6000fd5b50505050565b60008060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e852e7416040518163ffffffff1660e01b815260040160206040518083038186803b15801561014c57600080fd5b505afa158015610160573d6000803e3d6000fd5b505050506040513d602081101561017657600080fd5b505161018557506103e8610189565b50600a5b9056fea2646970667358221220587684a8014283bf396b2ff7b88b385e8432f9848934687ee74b8ae71ec7bc6064736f6c634300060c0033";

type ShopAttackConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ShopAttackConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ShopAttack__factory extends ContractFactory {
  constructor(...args: ShopAttackConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _address: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ShopAttack> {
    return super.deploy(_address, overrides || {}) as Promise<ShopAttack>;
  }
  override getDeployTransaction(
    _address: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_address, overrides || {});
  }
  override attach(address: string): ShopAttack {
    return super.attach(address) as ShopAttack;
  }
  override connect(signer: Signer): ShopAttack__factory {
    return super.connect(signer) as ShopAttack__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ShopAttackInterface {
    return new utils.Interface(_abi) as ShopAttackInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ShopAttack {
    return new Contract(address, _abi, signerOrProvider) as ShopAttack;
  }
}
