/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  PuzzleWallet,
  PuzzleWalletInterface,
} from "../../../contracts/PuzzleWallet.sol/PuzzleWallet";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "addToWhitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balances",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_maxBalance",
        type: "uint256",
      },
    ],
    name: "init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "maxBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "data",
        type: "bytes[]",
      },
    ],
    name: "multicall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_maxBalance",
        type: "uint256",
      },
    ],
    name: "setMaxBalance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "whitelisted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610b52806100206000396000f3fe6080604052600436106100b15760003560e01c8063b61d27f611610069578063d0e30db01161004e578063d0e30db01461018b578063d936547e14610193578063e43252d7146101c0576100b1565b8063b61d27f614610158578063b7b0422d1461016b576100b1565b80638da5cb5b1161009a5780638da5cb5b146101015780639d51d9b714610123578063ac9650d814610145576100b1565b806327e235e3146100b657806373ad468a146100ec575b600080fd5b3480156100c257600080fd5b506100d66100d13660046106e2565b6101e0565b6040516100e39190610ac7565b60405180910390f35b3480156100f857600080fd5b506100d66101f2565b34801561010d57600080fd5b506101166101f8565b6040516100e3919061082f565b34801561012f57600080fd5b5061014361013e366004610807565b610207565b005b610143610153366004610798565b610262565b610143610166366004610709565b610407565b34801561017757600080fd5b50610143610186366004610807565b610519565b610143610568565b34801561019f57600080fd5b506101b36101ae3660046106e2565b6105e5565b6040516100e39190610843565b3480156101cc57600080fd5b506101436101db3660046106e2565b6105fa565b60036020526000908152604090205481565b60015481565b6000546001600160a01b031681565b3360009081526002602052604090205460ff1661023f5760405162461bcd60e51b815260040161023690610946565b60405180910390fd5b471561025d5760405162461bcd60e51b8152600401610236906109eb565b600155565b3360009081526002602052604090205460ff166102915760405162461bcd60e51b815260040161023690610946565b6000805b828110156104015760608484838181106102ab57fe5b90506020028101906102bd9190610ad0565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050506020820151919250507fffffffff0000000000000000000000000000000000000000000000000000000081167fd0e30db00000000000000000000000000000000000000000000000000000000014156103665783156103615760405162461bcd60e51b815260040161023690610a90565b600193505b60003087878681811061037557fe5b90506020028101906103879190610ad0565b60405161039592919061081f565b600060405180830381855af49150503d80600081146103d0576040519150601f19603f3d011682016040523d82523d6000602084013e6103d5565b606091505b50509050806103f65760405162461bcd60e51b815260040161023690610a59565b505050600101610295565b50505050565b3360009081526002602052604090205460ff166104365760405162461bcd60e51b815260040161023690610946565b336000908152600360205260409020548311156104655760405162461bcd60e51b81526004016102369061090f565b3360009081526003602052604090205461047f9084610648565b336000908152600360205260408082209290925590516001600160a01b0386169085906104af908690869061081f565b60006040518083038185875af1925050503d80600081146104ec576040519150601f19603f3d011682016040523d82523d6000602084013e6104f1565b606091505b50509050806105125760405162461bcd60e51b8152600401610236906108d8565b5050505050565b600154156105395760405162461bcd60e51b815260040161023690610a22565b600155600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001633179055565b3360009081526002602052604090205460ff166105975760405162461bcd60e51b815260040161023690610946565b6001544711156105b95760405162461bcd60e51b8152600401610236906109b4565b336000908152600360205260409020546105d39034610691565b33600090815260036020526040902055565b60026020526000908152604090205460ff1681565b6000546001600160a01b031633146106245760405162461bcd60e51b81526004016102369061097d565b6001600160a01b03166000908152600260205260409020805460ff19166001179055565b600061068a83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506106b6565b9392505050565b60008282018381101561068a5760405162461bcd60e51b8152600401610236906108a1565b600081848411156106da5760405162461bcd60e51b8152600401610236919061084e565b505050900390565b6000602082840312156106f3578081fd5b81356001600160a01b038116811461068a578182fd5b6000806000806060858703121561071e578283fd5b84356001600160a01b0381168114610734578384fd5b935060208501359250604085013567ffffffffffffffff80821115610757578384fd5b818701915087601f83011261076a578384fd5b813581811115610778578485fd5b886020828501011115610789578485fd5b95989497505060200194505050565b600080602083850312156107aa578182fd5b823567ffffffffffffffff808211156107c1578384fd5b818501915085601f8301126107d4578384fd5b8135818111156107e2578485fd5b86602080830285010111156107f5578485fd5b60209290920196919550909350505050565b600060208284031215610818578081fd5b5035919050565b6000828483379101908152919050565b6001600160a01b0391909116815260200190565b901515815260200190565b6000602080835283518082850152825b8181101561087a5785810183015185820160400152820161085e565b8181111561088b5783604083870101525b50601f01601f1916929092016040019392505050565b6020808252601b908201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604082015260600190565b60208082526010908201527f457865637574696f6e206661696c656400000000000000000000000000000000604082015260600190565b60208082526014908201527f496e73756666696369656e742062616c616e6365000000000000000000000000604082015260600190565b6020808252600f908201527f4e6f742077686974656c69737465640000000000000000000000000000000000604082015260600190565b6020808252600d908201527f4e6f7420746865206f776e657200000000000000000000000000000000000000604082015260600190565b60208082526013908201527f4d61782062616c616e6365207265616368656400000000000000000000000000604082015260600190565b60208082526019908201527f436f6e74726163742062616c616e6365206973206e6f74203000000000000000604082015260600190565b60208082526013908201527f416c726561647920696e697469616c697a656400000000000000000000000000604082015260600190565b6020808252601b908201527f4572726f72207768696c652064656c65676174696e672063616c6c0000000000604082015260600190565b6020808252601f908201527f4465706f7369742063616e206f6e6c792062652063616c6c6564206f6e636500604082015260600190565b90815260200190565b6000808335601e19843603018112610ae6578283fd5b83018035915067ffffffffffffffff821115610b00578283fd5b602001915036819003821315610b1557600080fd5b925092905056fea264697066735822122096d5ebe423f2059d049728f85e0f04b54ddbeb9543097fe80b29b1756fd7b8f864736f6c634300060c0033";

type PuzzleWalletConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PuzzleWalletConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PuzzleWallet__factory extends ContractFactory {
  constructor(...args: PuzzleWalletConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PuzzleWallet> {
    return super.deploy(overrides || {}) as Promise<PuzzleWallet>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): PuzzleWallet {
    return super.attach(address) as PuzzleWallet;
  }
  override connect(signer: Signer): PuzzleWallet__factory {
    return super.connect(signer) as PuzzleWallet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PuzzleWalletInterface {
    return new utils.Interface(_abi) as PuzzleWalletInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PuzzleWallet {
    return new Contract(address, _abi, signerOrProvider) as PuzzleWallet;
  }
}
