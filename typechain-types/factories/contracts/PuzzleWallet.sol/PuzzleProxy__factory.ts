/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BytesLike,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  PuzzleProxy,
  PuzzleProxyInterface,
} from "../../../contracts/PuzzleWallet.sol/PuzzleProxy";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_admin",
        type: "address",
      },
      {
        internalType: "address",
        name: "_implementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_initData",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "admin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_expectedAdmin",
        type: "address",
      },
    ],
    name: "approveNewAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingAdmin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newAdmin",
        type: "address",
      },
    ],
    name: "proposeNewAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161075138038061075183398101604081905261002f91610138565b818161003a826100d6565b8051156100ab576000826001600160a01b03168260405161005b91906101fb565b600060405180830381855af49150503d8060008114610096576040519150601f19603f3d011682016040523d82523d6000602084013e61009b565b606091505b50509050806100a957600080fd5b505b5050600180546001600160a01b0319166001600160a01b039490941693909317909255506102bc9050565b6100e98161013260201b6102441760201c565b61010e5760405162461bcd60e51b815260040161010590610217565b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc55565b3b151590565b60008060006060848603121561014c578283fd5b8351610157816102a4565b6020850151909350610168816102a4565b60408501519092506001600160401b0380821115610184578283fd5b818601915086601f830112610197578283fd5b8151818111156101a5578384fd5b604051601f8201601f1916810160200183811182821017156101c5578586fd5b6040528181528382016020018910156101dc578485fd5b6101ed826020830160208701610274565b809450505050509250925092565b6000825161020d818460208701610274565b9190910192915050565b60208082526036908201527f5570677261646561626c6550726f78793a206e657720696d706c656d656e746160408201527f74696f6e206973206e6f74206120636f6e747261637400000000000000000000606082015260800190565b60005b8381101561028f578181015183820152602001610277565b8381111561029e576000848401525b50505050565b6001600160a01b03811681146102b957600080fd5b50565b610486806102cb6000396000f3fe60806040526004361061005e5760003560e01c8063a02fcc0a11610043578063a02fcc0a146100c0578063a6376746146100e0578063f851a440146101005761006d565b806326782247146100755780633659cfe6146100a05761006d565b3661006d5761006b610115565b005b61006b610115565b34801561008157600080fd5b5061008a61012f565b604051610097919061034a565b60405180910390f35b3480156100ac57600080fd5b5061006b6100bb36600461031c565b61013e565b3480156100cc57600080fd5b5061006b6100db36600461031c565b61017d565b3480156100ec57600080fd5b5061006b6100fb36600461031c565b610206565b34801561010c57600080fd5b5061008a610235565b61011d61012d565b61012d61012861024a565b61026f565b565b6000546001600160a01b031681565b6001546001600160a01b031633146101715760405162461bcd60e51b815260040161016890610419565b60405180910390fd5b61017a81610293565b50565b6001546001600160a01b031633146101a75760405162461bcd60e51b815260040161016890610419565b6000546001600160a01b038281169116146101d45760405162461bcd60e51b81526004016101689061035e565b506000546001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b03909216919091179055565b6000805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6001546001600160a01b031681565b3b151590565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5490565b3660008037600080366000845af43d6000803e80801561028e573d6000f35b3d6000fd5b61029c816102d3565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b6102dc81610244565b6102f85760405162461bcd60e51b8152600401610168906103bc565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc55565b60006020828403121561032d578081fd5b81356001600160a01b0381168114610343578182fd5b9392505050565b6001600160a01b0391909116815260200190565b602080825260409082018190527f4578706563746564206e65772061646d696e206279207468652063757272656e908201527f742061646d696e206973206e6f74207468652070656e64696e672061646d696e606082015260800190565b60208082526036908201527f5570677261646561626c6550726f78793a206e657720696d706c656d656e746160408201527f74696f6e206973206e6f74206120636f6e747261637400000000000000000000606082015260800190565b60208082526017908201527f43616c6c6572206973206e6f74207468652061646d696e00000000000000000060408201526060019056fea2646970667358221220d98f8c422637e402855698139faeb96bff6b13d8300c3a16a8dde2919d9e0efe64736f6c634300060c0033";

type PuzzleProxyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PuzzleProxyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PuzzleProxy__factory extends ContractFactory {
  constructor(...args: PuzzleProxyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _admin: PromiseOrValue<string>,
    _implementation: PromiseOrValue<string>,
    _initData: PromiseOrValue<BytesLike>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PuzzleProxy> {
    return super.deploy(
      _admin,
      _implementation,
      _initData,
      overrides || {}
    ) as Promise<PuzzleProxy>;
  }
  override getDeployTransaction(
    _admin: PromiseOrValue<string>,
    _implementation: PromiseOrValue<string>,
    _initData: PromiseOrValue<BytesLike>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _admin,
      _implementation,
      _initData,
      overrides || {}
    );
  }
  override attach(address: string): PuzzleProxy {
    return super.attach(address) as PuzzleProxy;
  }
  override connect(signer: Signer): PuzzleProxy__factory {
    return super.connect(signer) as PuzzleProxy__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PuzzleProxyInterface {
    return new utils.Interface(_abi) as PuzzleProxyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PuzzleProxy {
    return new Contract(address, _abi, signerOrProvider) as PuzzleProxy;
  }
}
